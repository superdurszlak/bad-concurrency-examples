plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.10'
    id 'me.champeau.jmh' version '0.6.1'
}
group = 'me.superdurszlak'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.7.1'
    testImplementation 'org.junit-pioneer:junit-pioneer:1.3.8'
}

compileKotlin {
    kotlinOptions.jvmTarget = '13'
}

test {
    useJUnitPlatform()
}

jmh {
    iterations = 10
    threads = 1
    timeOnIteration = '25s'
    batchSize = 1
    operationsPerInvocation = 1
    benchmarkMode = ['thrpt'] // Benchmark mode. Available modes are: [Throughput/thrpt, AverageTime/avgt, SampleTime/sample, SingleShotTime/ss, All/all]
    timeUnit = 's'
    fork = 1 // How many times to forks a single benchmark. Use 0 to disable forking altogether
    failOnError = true // Should JMH fail immediately if any benchmark had experienced the unrecoverable error?
    forceGC = true
    resultFormat = 'JSON' // Result format type (one of CSV, JSON, NONE, SCSV, TEXT)
    warmupIterations = 1
    warmupBatchSize = 1
    warmup = '50s'
    warmupForks = 1
    jmhVersion = '1.28'
}

wrapper {
    gradleVersion '6.8.3'
}